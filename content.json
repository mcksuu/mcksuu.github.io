[{"title":"再识数据结构（1）线性表","date":"2017-02-14T10:00:10.083Z","path":"2017/02/14/list/","text":"1. &#x7EBF;&#x6027;&#x8868;&#x7684;&#x5B9A;&#x4E49; &#x7EBF;&#x6027;&#x8868;&#xFF08;linear list&#xFF09;&#x662F;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x4E00;&#x79CD;&#xFF0C;&#x4E00;&#x4E2A;&#x7EBF;&#x6027;&#x8868;&#x662F;n&#x4E2A;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7279;&#x6027;&#x7684;&#x6570;&#x636E;&#x5143;&#x7D20;&#x7684;&#x6709;&#x9650;&#x5E8F;&#x5217;&#x3002;&#x6570;&#x636E;&#x5143;&#x7D20;&#x662F;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x7684;&#x7B26;&#x53F7;&#xFF0C;&#x5176;&#x5177;&#x4F53;&#x542B;&#x4E49;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x4E00;&#x822C;&#x4E0D;&#x540C;&#x3002; &#x5728;&#x7A0D;&#x590D;&#x6742;&#x7684;&#x7EBF;&#x6027;&#x8868;&#x4E2D;&#xFF0C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5143;&#x7D20;&#x53EF;&#x7531;&#x591A;&#x4E2A;&#x6570;&#x636E;&#x9879;&#xFF08;item&#xFF09;&#x7EC4;&#x6210;&#xFF0C;&#x6B64;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x5E38;&#x628A;&#x6570;&#x636E;&#x5143;&#x7D20;&#x6210;&#x4E3A;&#x8BB0;&#x5F55;&#xFF08;record&#xFF09;&#xFF0C;&#x542B;&#x6709;&#x5927;&#x91CF;&#x8BB0;&#x5F55;&#x7684;&#x7EBF;&#x6027;&#x8868;&#x53C8;&#x79F0;&#x6587;&#x4EF6;&#xFF08;file&#xFF09;&#x3002; &#x7EBF;&#x6027;&#x8868;&#x4E2D;&#x7684;&#x4E2A;&#x6570;$n$&#x5B9A;&#x4E49;&#x4E3A;&#x7EBF;&#x6027;&#x8868;&#x7684;&#x957F;&#x5EA6;&#xFF0C;$n=0$&#x65F6;&#x79F0;&#x4E3A;&#x7A7A;&#x8868;&#x3002;&#x5728;&#x975E;&#x7A7A;&#x8868;&#x4E2D;&#x6BCF;&#x4E2A;&#x6570;&#x636E;&#x5143;&#x7D20;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x786E;&#x5B9A;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x5982;&#x7528;$a_i$&#x8868;&#x793A;&#x6570;&#x636E;&#x5143;&#x7D20;&#xFF0C;&#x5219;i&#x79F0;&#x4E3A;&#x6570;&#x636E;&#x5143;&#x7D20;$a_i$&#x5728;&#x7EBF;&#x6027;&#x8868;&#x4E2D;&#x7684;&#x4F4D;&#x5E8F;&#x3002; &#x7EBF;&#x6027;&#x8868;&#x7684;&#x76F8;&#x90BB;&#x5143;&#x7D20;&#x4E4B;&#x95F4;&#x5B58;&#x5728;&#x7740;&#x5E8F;&#x5076;&#x5173;&#x7CFB;&#x3002;&#x5982;&#x7528;&#xFF08;a1&#xFF0C;&#x2026;&#xFF0C;ai-1&#xFF0C;ai&#xFF0C;ai+1&#xFF0C;&#x2026;&#xFF0C;an&#xFF09;&#x8868;&#x793A;&#x4E00;&#x4E2A;&#x987A;&#x5E8F;&#x8868;&#xFF0C;&#x5219;&#x8868;&#x4E2D;ai-1&#x9886;&#x5148;&#x4E8E;ai&#xFF0C;ai&#x9886;&#x5148;&#x4E8E;ai+1&#xFF0C;&#x79F0;ai-1&#x662F;ai&#x7684;&#x76F4;&#x63A5;&#x524D;&#x9A71;&#x5143;&#x7D20;&#xFF0C;ai+1&#x662F;ai&#x7684;&#x76F4;&#x63A5;&#x540E;&#x7EE7;&#x5143;&#x7D20;&#x3002;&#x5F53;i=1,2&#xFF0C;&#x2026;&#xFF0C;n-1&#x65F6;&#xFF0C;ai&#x6709;&#x4E14;&#x4EC5;&#x6709;&#x4E00;&#x4E2A;&#x76F4;&#x63A5;&#x540E;&#x7EE7;&#xFF0C;&#x5F53;i=2&#xFF0C;3&#xFF0C;&#x2026;&#xFF0C;n&#x65F6;&#xFF0C;ai&#x6709;&#x4E14;&#x4EC5;&#x6709;&#x4E00;&#x4E2A;&#x76F4;&#x63A5;&#x524D;&#x9A71;[1]&#xA0;&#x3002; 2. &#x7EBF;&#x6027;&#x8868;ADT123456789&#x57FA;&#x672C;&#x64CD;&#x4F5C;InitList(&amp;L)//&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x7A7A;&#x7684;&#x7EBF;&#x6027;&#x8868;LDestoryList(&amp;L)//&#x9500;&#x6BC1;&#x7EBF;&#x6027;&#x8868;LClearList(&amp;L)//&#x5C06;L&#x7F6E;&#x4E3A;&#x7A7A;&#x8868;ListEmpty(L)//&#x662F;&#x5426;&#x4E3A;&#x7A7A;&#x8868;ListLength(L)//L&#x4E2D;&#x6570;&#x636E;&#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;GetElem(L, i, &amp;e)//&#x7528;e&#x8FD4;&#x56DE;L&#x4E2D;&#x7B2C;i&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x503C;ListInsert(&amp;L, i, e)//&#x5728;L&#x4E2D;&#x7684;&#x7B2C;i&#x4E2A;&#x4F4D;&#x7F6E;&#x63D2;&#x5165;&#x65B0;&#x7684;&#x5143;&#x7D20;eListDelete(&amp;L, i, e)//&#x5220;&#x9664;L&#x4E2D;&#x7684;&#x7B2C;i&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;&#x5E76;&#x628A;&#x503C;&#x8D4B;&#x7ED9;e 3. &#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#xFF08;&#x90E8;&#x5206;&#x5B9E;&#x73B0;&#xFF09; InitList(&amp;L) 1234567891011void initListStruct(ListStruct * ls){ ls-&gt;elem = (int *)malloc(DEFAULT_SIZE * sizeof(ls-&gt;elem)); if (ls-&gt;elem == NULL) { exit(OVERFLOW); } ls-&gt;length = 0;} ListInsert(&amp;L, i, e) 1234567891011121314151617181920212223242526void ListInsert(ListStruct *ls, int position, int value){ if (position &lt;= 0 || position &gt; ls-&gt;length) { printf(&quot;&#x8BF7;&#x8F93;&#x5165;&#x6B63;&#x786E;&#x7684;&#x63D2;&#x5165;&#x4F4D;&#x7F6E;&quot;); } else { if (ls-&gt;length % DEFAULT_SIZE == 0)//&#x5982;&#x679C;&#x5F53;&#x524D;list&#x7684;&#x957F;&#x5EA6;&#x548C;&#x9ED8;&#x8BA4;&#x7684;&#x957F;&#x5EA6;&#x76F8;&#x7B49;&#xFF0C;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x5206;&#x914D;&#x5185;&#x5B58; { //&#x91CD;&#x65B0;&#x5206;&#x914D;&#x5185;&#x5B58;&#xFF0C;&#x589E;&#x91CF;&#x4E3A;DEFAULT_SIZE realloc(ls-&gt;elem, DEFAULT_SIZE * (ls-&gt;length / DEFAULT_SIZE + 1) * sizeof(ls-&gt;elem)); } for (int *i = &amp;(ls-&gt;elem[ls-&gt;length - 1]); i &gt;= &amp;(ls-&gt;elem[position - 1]); i--) { *(i + 1) = *i;//&#x5411;&#x540E;&#x79FB; } ls-&gt;elem[position - 1] = value;//&#x63D2;&#x5165;&#x4F4D;&#x7F6E;&#x91CD;&#x65B0;&#x8D4B;&#x503C; ls-&gt;length++;//&#x957F;&#x5EA6;&#x52A0;1 }} ListDelete(&amp;L, i, e) 1234567891011121314151617181920void DeleteElem(ListStruct * ls, int position, int * value){ if (position &lt;= 0 || position &gt; ls-&gt;length) { printf(&quot;&#x8BF7;&#x8F93;&#x5165;&#x6B63;&#x786E;&#x7684;&#x63D2;&#x5165;&#x4F4D;&#x7F6E;&quot;); } else { *value = ls-&gt;elem[position - 1];//&#x5220;&#x9664;&#x7684;&#x5143;&#x7D20;&#x7684;&#x503C; int *p = &amp;ls-&gt;elem[position - 1]; int *q = &amp;ls-&gt;elem[ls-&gt;length - 1]; while (p &lt; q) { *p = *p + 1;//&#x5411;&#x524D;&#x79FB;&#x52A8; p++; } ls-&gt;length--;//&#x957F;&#x5EA6;-1 }} DestoryList(&amp;L) 1234567void DestoryList(ListStruct * ls){ free(ls-&gt;elem);//&#x91CA;&#x653E;&#x7EBF;&#x6027;&#x8868;&#xFF0C;&#x8FD9;&#x91CC;&#x4E0D;&#x80FD;&#x53BB;&#x91CA;&#x653E;ls&#xFF0C;&#x8FD9;&#x4E2A;&#x5185;&#x5B58;&#x5E76;&#x4E0D;&#x662F;&#x6211;&#x4EEC;&#x7533;&#x8BF7;&#x7684; ls-&gt;elem = NULL; ls-&gt;length = 0; printf(&quot;&#x5185;&#x5B58;&#x88AB;&#x91CA;&#x653E;&quot;);} 4. &#x603B;&#x7ED3; &#x5728;&#x8FD9;&#x91CC;&#x6211;&#x4F7F;&#x7528;&#x4E86;C&#x8BED;&#x8A00;&#x6765;&#x5B9E;&#x73B0;&#x90E8;&#x5206;&#x64CD;&#x4F5C;&#xFF0C;&#x603B;&#x7684;&#x6765;&#x8BF4;&#x8FD8;&#x662F;&#x56E0;&#x4E3A;&#x4E4B;&#x524D;&#x5BF9;C&#x8BED;&#x8A00;&#x7684;&#x6050;&#x60E7;&#xFF08;&#x6307;&#x9488;&#x6050;&#x60E7;&#x611F;&#xFF09;&#x3002;&#x4F46;&#x662F;&#x771F;&#x6B63;&#x5DE5;&#x4F5C;&#x4E86;&#x53D1;&#x73B0;&#xFF0C;&#x7ED5;&#x6765;&#x7ED5;&#x53BB;&#x8FD8;&#x662F;&#x7ED5;&#x4E0D;&#x5F00;&#x6307;&#x9488;&#x7684;&#x5404;&#x79CD;&#x64CD;&#x4F5C;&#x3002;&#x4E8E;&#x662F;&#xFF0C;&#x6211;&#x6253;&#x7B97;&#x91CD;&#x65B0;&#x5B66;&#x4E60;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6765;&#x5DE9;&#x56FA;&#x81EA;&#x5DF1;&#x7684;&#x77E5;&#x8BC6;&#x3002;","tags":[]},{"title":"Android Volley 支持Https（1）","date":"2016-12-23T03:00:12.654Z","path":"2016/12/23/Android-Volley-Https/","text":"&#x76F8;&#x4FE1;&#x5927;&#x90E8;&#x5206;&#x5F00;&#x53D1;&#x8005;&#x90FD;&#x4F1A;&#x9047;&#x5230;Volley&#x5982;&#x4F55;&#x652F;&#x6301;&#x81EA;&#x5B9A;&#x4E49;&#x8BC1;&#x4E66;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6700;&#x7B80;&#x5355;&#x7684;&#x529E;&#x6CD5;&#x5C31;&#x662F;&#x652F;&#x6301;&#x6240;&#x6709;&#x7684;SSL&#x8BC1;&#x4E66;&#x3002;&#x4F46;&#x662F;&#x5982;&#x679C;&#x652F;&#x6301;&#x6240;&#x6709;&#x7684;SSL&#x8BC1;&#x4E66;&#x7684;&#x8BDD;&#xFF0C;&#x5C31;&#x5931;&#x53BB;&#x4E86;Https&#x7684;&#x5B89;&#x5168;&#x6027;&#x4E86;&#xFF08;App&#x5728;Google Play&#x4E0A;&#x67B6;&#x4F1A;&#x4E0D;&#x901A;&#x8FC7;&#xFF09;&#x3002; 1.Volley&#x9ED8;&#x8BA4;&#x652F;&#x6301;&#x4E0D;&#x652F;&#x6301;Https&#xFF1F; &#x7B54;&#x6848;&#x662F;&#x652F;&#x6301;&#x7684;&#xFF01;&#x7F51;&#x4E0A;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x8BF4;Volley&#x4E0D;&#x652F;&#x6301;Https&#xFF0C;&#x5176;&#x5B9E;Volley&#x5728;&#x540E;&#x9762;&#x7684;&#x7248;&#x672C;&#x5DF2;&#x7ECF;&#x53EF;&#x4EE5;&#x652F;&#x6301;Https&#x8BF7;&#x6C42;&#x4E86;&#x3002;&#x5177;&#x4F53;&#x554A;&#xFF0C;&#x8FD8;&#x662F;&#x627E;&#x5EA6;&#x5A18;&#x770B;&#x5427;&#xFF0C;&#x8FD9;&#x91CC;&#x4E3B;&#x8981;&#x8BB2;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x3002; 2.&#x51C6;&#x5907;&#x5DE5;&#x4F5C; &#x751F;&#x6210;BC&#x8BC1;&#x4E66; Android &#x9700;&#x8981;BC&#x8BC1;&#x4E66;&#xFF0C;&#x800C;Java&#x7684;keytool&#x4E0D;&#x63D0;&#x4F9B;BKS&#x683C;&#x5F0F;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5176;&#x4ED6;&#x5DE5;&#x5177;&#x751F;&#x6210;&#x3002; &#x8FD9;&#x91CC;&#x4F7F;&#x7528;Java&#x6269;&#x5C55;&#x7B97;&#x6CD5;&#x548C;&#x8F85;&#x52A9;&#x5DE5;&#x5177;&#xFF08;bcprov-ext-jdk15on-146.jar &#xFF09;&#x6765;&#x751F;&#x6210;BKS&#x6587;&#x4EF6;&#x3002;**&#x5728;&#x8FD9;&#x91CC;&#x8981;&#x8BF4;&#x4E0B;&#xFF0C;&#x6211;&#x662F;&#x7528;&#x4E86;&#x66F4;&#x9AD8;&#x7248;&#x672C;&#x7684;jar&#x6587;&#x4EF6;&#x6765;&#x751F;&#x6210;BKS&#x6587;&#x4EF6;&#xFF0C;&#x4F46;&#x662F;&#x603B;&#x662F;&#x4F1A;&#x51FA;&#x73B0;&#x4E0B;&#x9762;&#x7684;&#x9519;&#x8BEF;&#xFF1A; 1java.lang.ClassNotFoundException: org.bouncycastle.jce.provider.BouncyCastleProvid &#x5982;&#x679C;&#x627E;&#x4E0D;&#x5230;bcprov-ext-jdk15on-146.jar&#xFF0C;&#x53EF;&#x4EE5;&#x4E0B;&#x8F7D;&#xFF0C;&#x63D0;&#x53D6;&#x7801;&#x4E3A;8fvq&#x3002; &#x4E0B;&#x8F7D;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x4E0D;&#x7528;&#x8FDB;&#x884C;&#x4EFB;&#x4F55;&#x914D;&#x7F6E;&#x3002;&#x5C06;&#x4E0B;&#x8F7D;&#x7684;jar&#x6587;&#x4EF6;&#x653E;&#x5230;&#x81EA;&#x5DF1;&#x9700;&#x8981;&#x751F;&#x6210;BKS&#x7684;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528;&#x547D;&#x4EE4;&#x884C;&#x5DE5;&#x5177;&#x8FDB;&#x5165;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528;&#x547D;&#x4EE4;&#xFF1A; 1keytool -importcert -keystore &#x751F;&#x6210;&#x7684;bks&#x6587;&#x4EF6;&#x540D;.bks -file &#x8BC1;&#x4E66;&#x6587;&#x4EF6;.crt -storetype BKS -provider org.bouncycastle.jce.provider.BouncyCastleProvider -providerpath &quot;bcprov-ext-jdk16-146.jar&quot; &#x4E4B;&#x540E;&#x4F1A;&#x51FA;&#x73B0;&#xFF1A;&#xFF0C;&#x8F93;&#x5165;&#x4E24;&#x6B21;&#x5BC6;&#x94A5;&#x53E3;&#x4EE4;&#x5373;&#x53EF;&#x3002; &#x7136;&#x540E;&#x4F1A;&#x63D0;&#x793A;&#x662F;&#x5426;&#x4FE1;&#x4EFB;&#x8F93;&#x5165;y&#x5373;&#x53EF;&#x751F;&#x6210;BKS&#x6587;&#x4EF6;&#x3002; OK&#xFF0C;&#x73B0;&#x5728;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#x4E86;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;&#xFF0C;&#x4E0B;&#x9762;&#x5C31;&#x662F;&#x4FEE;&#x6539;Volley&#x7684;&#x6E90;&#x7801;&#x8FDB;&#x884C;&#x5B9E;&#x73B0;&#x3002; 1&#x6B32;&#x77E5;&#x8BE6;&#x60C5;&#xFF0C;&#x4E14;&#x542C;&#x4E0B;&#x56DE;&#x5206;&#x89E3;&#x3002;","tags":[]},{"title":"Hello World","date":"2016-12-23T02:08:19.480Z","path":"2016/12/23/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]